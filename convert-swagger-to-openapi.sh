#!/bin/bash

CONVERTER_URL='http://localhost:8990/api/convert'

# Check if docker exists
echo -n "Checking docker command..."
if ! command -v docker &>/dev/null; then
  echo "Failure: docker command not found. Please check if docker is installed."
  exit 1
fi
echo "Success"

echo -n "Running swag init..."
swag init &>/dev/null
if [ ! $? -eq 0 ]; then
  echo "Failure"
  exit 1
fi
echo "Success"

# Get swagger documentation
swagger_doc=$(cat docs/swagger.json)
if [ ! -f "docs/swagger.json" ]; then
  echo "docs/swagger.json file not found"
  exit 1
fi

# Convert swagger doc to open API doc
echo -n "Converting swagger to open API..."
http_response=$(curl --silent --write-out "HTTPSTATUS:%{http_code}" -X POST $CONVERTER_URL --header 'Content-Type: application/json' -d "$swagger_doc")
curl_error=$?

if [ ! $curl_error -eq 0 ]; then
  echo "curl failed with code $curl_error. Check https://curl.se/libcurl/c/libcurl-errors.html for reference"
  exit 1
fi

# extract the body
http_body=$(echo $http_response | sed -e 's/HTTPSTATUS\:.*//g')

# extract the status
http_status=$(echo $http_response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')

if [ ! $http_status -eq 200 ]; then
  echo "Failed to convert swagger doc to openAPI. HTTP status: $http_status"
  exit 1
fi

echo $http_body >docs/openapi.json
echo "Success"

### CUSTOM SCRIPT
echo -n "Replacing autogenerated docs/docs.go..."

sed -i '/var doc = `{/,/}`/c\var doc = `'"$http_body"'`' docs/docs.go
if [ ! $? -eq 0 ]; then
  echo "Failure"
  exit 1
fi
echo "Success"

echo -n "Building executable..."
go build
if [ ! $? -eq 0 ]; then
  echo "Failure"
  exit 1
fi
echo "Success"

echo "Done"
